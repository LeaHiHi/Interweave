plugins {
	id 'fabric-loom' version '0.6-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "http://zoidberg.ukp.informatik.tu-darmstadt.de/artifactory/public-releases/" }
	jcenter()
	maven {
		name = 'Fabric'
		url = 'http://maven.fabricmc.net/'
	}

	maven {
		name = 'legacy-fabric'
		url = 'https://maven.legacyfabric.net/'
	}

	maven {
		name = 'mojang'
		url = 'https://libraries.minecraft.net/'
	}

	maven {
		name = "CurseMaven"
		url = "https://www.cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}

	maven {
		name = "Jitpack"
		url = "https://jitpack.io/"
	}
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	compile("net.dv8tion:JDA:${project.jda_version}") {
		exclude module: 'opus-java'
	}

	include("net.dv8tion:JDA:${project.jda_version}") {
		exclude module: 'opus-java'
	}

	include "com.fasterxml.jackson.core:jackson-databind:2.9.3"
	include "com.fasterxml.jackson.core:jackson-annotations:2.9.0"
	include "com.fasterxml.jackson.core:jackson-core:2.9.3"
	compile "com.fasterxml.jackson.core:jackson-databind:2.9.3"
	compile "com.fasterxml.jackson.core:jackson-annotations:2.9.0"
	compile "com.fasterxml.jackson.core:jackson-core:2.9.3"
	
	include "com.squareup.okhttp3:okhttp:3.9.1"
	/*
	include "com.squareup.okhttp3:logging-interceptor:3.9.1"
	*/
	include 'org.slf4j:slf4j-nop:1.7.25'
	include 'org.slf4j:slf4j-api:1.7.25'
	
	/*include "org.apache.logging.log4j:log4j-api:2.11.0"
	compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.8.1'
	include group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.8.1'*/
	include group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
	include "com.squareup.okio:okio:1.13.0"
	include "com.neovisionaries:nv-websocket-client:2.10"
	include group: 'gnu.trove', name: 'trove', version: '3.0.3'

}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
	// JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
	// We'll use that if it's available, but otherwise we'll use the older option.
	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}